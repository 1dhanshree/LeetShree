class Solution {
    //Dynamic Programming
public:
    int maxProfit(vector<int>& prices) {
        int mini = prices[0];
        int maxProfit = 0;
        int n = prices.size();
        for(int i=1; i<n; i++){
            int cost = prices[i] - mini;
            maxProfit = max(maxProfit, cost);
            mini = min(mini, prices[i]);
        }
        return maxProfit;
    }
};


//METHOD II
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int buy = prices[0];
        int profit = 0;
        for(int i=0; i<prices.size(); i++){
            if(prices[i]<buy){
                buy = prices[i];
            }else if (prices[i] - buy > profit){
                profit = prices[i] - buy;
            }
            
        }
        return profit;
    }
};
